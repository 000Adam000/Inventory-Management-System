/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package warehouse;

/**
 *
 * @author DotNet
 */
public class TestTabbedPane extends javax.swing.JFrame {

    /**
     * Creates new form TestTabbedPane
     */
    public TestTabbedPane() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TabbedPane = new javax.swing.JTabbedPane();
        UsersPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        numberField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JPasswordField();
        retypePasswordField = new javax.swing.JPasswordField();
        addressField = new javax.swing.JTextField();
        roleBox = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        mRadioButton = new javax.swing.JRadioButton();
        fmRadioButton = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        DepartmentPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        ConsumersPanel = new javax.swing.JPanel();
        CategoryPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UsersPanel.setBackground(new java.awt.Color(204, 255, 255));
        UsersPanel.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(204, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Manage Users");
        jPanel7.add(jLabel6);

        UsersPanel.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jPanel8.setBackground(new java.awt.Color(204, 255, 255));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Username", "Birthdate", "Mobile Number", "Email", "Gender", "Password", "Addres", "Role Selection"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 311;
        gridBagConstraints.ipady = 324;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel8.add(jScrollPane1, gridBagConstraints);

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 52;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel4, gridBagConstraints);

        nameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nameFieldMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(nameField, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Mobile Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 6, 0, 0);
        jPanel8.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 0, 16);
        jPanel8.add(numberField, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 55;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel7, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.ipadx = 32;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel8, gridBagConstraints);

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Re_Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel9, gridBagConstraints);

        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel10, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Role Selection");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel11, gridBagConstraints);

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(emailField, gridBagConstraints);

        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(PasswordField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(retypePasswordField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(addressField, gridBagConstraints);

        roleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a role", "Admin", "User" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 105;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(roleBox, gridBagConstraints);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons/save.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 43, 0, 0);
        jPanel8.add(saveButton, gridBagConstraints);

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons/updateicon.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 14, 0, 0);
        jPanel8.add(updateButton, gridBagConstraints);

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons/clearicon.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 23;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 43, 0, 0);
        jPanel8.add(clearButton, gridBagConstraints);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/warehouse/icons/deleteicon.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 24;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 14, 6, 0);
        jPanel8.add(deleteButton, gridBagConstraints);

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 6, 0, 0);
        jPanel8.add(jLabel12, gridBagConstraints);

        mRadioButton.setForeground(new java.awt.Color(0, 0, 0));
        mRadioButton.setText("Male");
        mRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel8.add(mRadioButton, gridBagConstraints);

        fmRadioButton.setForeground(new java.awt.Color(0, 0, 0));
        fmRadioButton.setText("Female");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel8.add(fmRadioButton, gridBagConstraints);

        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
        jPanel8.add(jLabel13, gridBagConstraints);

        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 138;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(usernameField, gridBagConstraints);

        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Birthdate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel8.add(jLabel14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 16);
        jPanel8.add(DateChooser, gridBagConstraints);

        UsersPanel.add(jPanel8, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Manage Users", UsersPanel);

        DepartmentPanel.setBackground(new java.awt.Color(204, 255, 255));
        DepartmentPanel.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setText("Manage Departments");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addGap(0, 6, Short.MAX_VALUE)))
        );

        DepartmentPanel.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));

        jLabel16.setText("name");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel16)
                .addContainerGap(509, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel16)
                .addContainerGap(323, Short.MAX_VALUE))
        );

        DepartmentPanel.add(jPanel4, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Department", DepartmentPanel);

        javax.swing.GroupLayout ConsumersPanelLayout = new javax.swing.GroupLayout(ConsumersPanel);
        ConsumersPanel.setLayout(ConsumersPanelLayout);
        ConsumersPanelLayout.setHorizontalGroup(
            ConsumersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        ConsumersPanelLayout.setVerticalGroup(
            ConsumersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Consumers", ConsumersPanel);

        javax.swing.GroupLayout CategoryPanelLayout = new javax.swing.GroupLayout(CategoryPanel);
        CategoryPanel.setLayout(CategoryPanelLayout);
        CategoryPanelLayout.setHorizontalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        CategoryPanelLayout.setVerticalGroup(
            CategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Category", CategoryPanel);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );

        TabbedPane.addTab("Products", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        /*
        DefaultTableModel dtm=(DefaultTableModel) table.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        int selectedRow = table.getSelectedRow();

        String id = dtm.getValueAt(selectedRow, 0).toString();
        nameField.setText(dtm.getValueAt(selectedRow, 1).toString());
        usernameField.setText(dtm.getValueAt(selectedRow, 2).toString());
        String dateString = dtm.getValueAt(selectedRow, 3).toString();
        try {
            // Parse the string into a Date object
            Date date =  sdf.parse(dateString);
            // Set the parsed date into the JDateChooser
            DateChooser.setDate(date);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Invalid date format!", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        numberField.setText(dtm.getValueAt(selectedRow, 4).toString());
        emailField.setText(dtm.getValueAt(selectedRow, 5).toString());
        String g = dtm.getValueAt(selectedRow, 6).toString();
        if (g.equals("Male")){
            mRadioButton.setSelected(true);
        }else{
            fmRadioButton.setSelected(true);
        }
        PasswordField.setText(dtm.getValueAt(selectedRow, 7).toString());
        addressField.setText(dtm.getValueAt(selectedRow, 8).toString());

        String r = dtm.getValueAt(selectedRow, 9).toString();
        switch (r){

            case "Admin":
            roleBox.setSelectedIndex(1);
            break;

            case "User":
            roleBox.setSelectedIndex(2);
            break;
            default:
            roleBox.setSelectedIndex(0);
        }
*/
    }//GEN-LAST:event_tableMouseClicked

    private void nameFieldMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameFieldMouseReleased
        /*
        if(evt.isPopupTrigger()){
            namePopupMenu.show(this, evt.getX(), evt.getY());
        }
*/
    }//GEN-LAST:event_nameFieldMouseReleased

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        /*
        try {
            if (nameField.getText().equals("")||usernameField.getText().equals("")||
                PasswordField.getText().equals("")||retypePasswordField.getText().equals("")||
                emailField.getText().equals("")||roleBox.getSelectedItem().toString().equals("Select a role")||
                DateChooser.getDate() == null ||numberField.getText().equals("")||
                getSelectedGender() == null || addressField.getText().equals("")){
                JOptionPane.showMessageDialog(null, "You must fill in all fields","warning" , JOptionPane.ERROR_MESSAGE);
            }else{

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String bdate = sdf.format(DateChooser.getDate());

                
                //ResultSet generatedKeys = pst.getGeneratedKeys();
                //int userId = -1;
                //if (generatedKeys.next()){
                //    userId = generatedKeys.getInt(1);

                //}


                if (PasswordField.getText().equals(retypePasswordField.getText())){
                    String sql = "INSERT INTO `users`(`Name`, `Username`, `Birthdate`, `Mobile Number`, `Email`,"
                    + " `Gender`, `Password`, `Address`, `Role Selection`) VALUES"
                    + " (?,?,?,?,?,?,?,?,?)";
                    pst = con.prepareStatement(sql);// , Statement.RETURN_GENERATED_KEYS
                    pst.setString(1, nameField.getText());
                    pst.setString(2, usernameField.getText());
                    pst.setString(3, bdate);
                    pst.setString(4, numberField.getText());
                    pst.setString(5, emailField.getText());
                    pst.setString(6, getSelectedGender());
                    pst.setString(7, PasswordField.getText());
                    pst.setString(8, addressField.getText());
                    pst.setString(9, roleBox.getSelectedItem().toString());
                    //pst.setString(10, String.valueOf(userId));
                    pst.executeUpdate();

                    /*
                    ResultSet generatedKeys = pst.getGeneratedKeys();
                    int userId = -1;
                    if (generatedKeys.next()){
                        userId = generatedKeys.getInt(1);
                    }

                    //dtm.addRow(new Object[]{
                    //    userId,
                    //    nameField.getText(),
                    //    usernameField.getText(),
                    //    bdate,
                    //    numberField.getText(),
                    //    emailField.getText(),
                    //    getSelectedGender(),
                    //    addressField.getText(),
                    //    roleBox.getSelectedItem().toString()
                    //});
                    
                    JOptionPane.showMessageDialog(null, "Account Created", "Confirmation", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null, "Password is wrong","warning" , JOptionPane.ERROR_MESSAGE);
                }
            }
            showData();
        } catch (SQLException e) {
            JOptionPane.showConfirmDialog(rootPane, e);
            //JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        Clear();
        
        */

    }//GEN-LAST:event_saveButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        /*
        int selectedRow = table.getSelectedRow();

        // Check if a row is selected
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(
                null,
                "Please select a row to update!",
                "No Selection",
                JOptionPane.WARNING_MESSAGE
            );
            return; // Exit the method early
        }

        try {
            if (nameField.getText().equals("")||usernameField.getText().equals("")||
                PasswordField.getText().equals("")||retypePasswordField.getText().equals("")||
                emailField.getText().equals("")||roleBox.getSelectedItem().toString().equals("Select a role")||
                DateChooser.getDate() == null ||numberField.getText().equals("")||
                getSelectedGender() == null || addressField.getText().equals("")){
                JOptionPane.showMessageDialog(null, "You must fill in all fields","warning" , JOptionPane.ERROR_MESSAGE);
            }else{
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                DefaultTableModel dtm = (DefaultTableModel) table.getModel();

                String bdate = sdf.format(DateChooser.getDate());
                String sql = "UPDATE `users` SET`Name`=?,"
                + "`Username`=?,`Birthdate`=?,"
                + "`Mobile Number`=?,`Email`=?,"
                + "`Gender`=?,`Password`=?,"
                + "`Address`=?,`Role Selection`=?"
                + " WHERE `ID` = ?";
                pst = con.prepareStatement(sql);
                pst.setString(1, nameField.getText());
                pst.setString(2, usernameField.getText());
                pst.setString(3, bdate);
                pst.setString(4, numberField.getText());
                pst.setString(5, emailField.getText());
                pst.setString(6, getSelectedGender());
                pst.setString(7, PasswordField.getText());
                pst.setString(8, addressField.getText());
                pst.setString(9, roleBox.getSelectedItem().toString());
                pst.setString(10, dtm.getValueAt(selectedRow, 0).toString());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Updated");
            }
            showData();
        } catch (SQLException e) {
            JOptionPane.showConfirmDialog(rootPane, e);
            //JOptionPane.showMessageDialog(rootPane, e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        Clear();

        */
    }//GEN-LAST:event_updateButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //Clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        /*
        int selectedRow = table.getSelectedRow();

        // Check if a row is selected
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(
                null,
                "Please select a row to delete!",
                "No Selection",
                JOptionPane.WARNING_MESSAGE
            );
            return;
        }

        // Proceed with deletion
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        String userId = dtm.getValueAt(selectedRow, 0).toString(); // Get ID from column 0

        try {
            String sql = "DELETE FROM users WHERE id = ?";
            pst = con.prepareStatement(sql);
            pst.setString(1, userId);
            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                dtm.removeRow(selectedRow); // Remove row from the table
                JOptionPane.showMessageDialog(null, "Record Deleted Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (pst != null) pst.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        Clear();
        
        //try {
        //    DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        //    int selectedRow = table.getSelectedRow();
        //    String sql = "DELETE FROM `users` WHERE `ID` = ?";
        //    pst = con.prepareStatement(sql);
        //    pst.setString(1, dtm.getValueAt(selectedRow, 0).toString());
        //    pst.executeUpdate();
        //    JOptionPane.showMessageDialog(rootPane, "Removed");
        //    showData();
        //} catch (SQLException e) {
        //}
        
        */
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void mRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mRadioButtonActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestTabbedPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestTabbedPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestTabbedPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestTabbedPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestTabbedPane().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CategoryPanel;
    private javax.swing.JPanel ConsumersPanel;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JPanel DepartmentPanel;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel UsersPanel;
    private javax.swing.JTextField addressField;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JRadioButton fmRadioButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mRadioButton;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numberField;
    private javax.swing.JPasswordField retypePasswordField;
    private javax.swing.JComboBox<String> roleBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable table;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
